name: Inspect Pull Requests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # bundlesize:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [20.x]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}

  #     - run: corepack enable
  #     - run: yarn set version berry
  #     - run: yarn install
  #     - run: npx lerna run build
  #     - name: Get Bundle Size
  #       uses: lironer/bundlemon-action@v1

  size-limit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: corepack enable
      - run: yarn set version berry
      - run: yarn install
      - run: npx lerna run build --scope=@versini/ui-hooks
      - run: npx lerna run build --scope=@versini/ui-components
      - run: npx lerna run build --scope=@versini/bundlesize
      - run: yarn danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  inspect:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: corepack enable
      - run: yarn set version berry
      - run: yarn install
      - run: npx lerna run build
      - run: npx lerna run lint
      - run: npx lerna run test:coverage
