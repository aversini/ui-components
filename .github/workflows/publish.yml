#
# This action runs everytime a PR tagged with the label "release" is merged
# into the "main" or "develop" branches.
#
# It automatically bumps packages version if needed:
# - stable version if merged into main branch
# - prerelease if merged into develop branch
# It then creates tags, creates GitHub releases and publishes the packages that did change.
#
# Example
#
# packages/libA depends on packages/libB
# libA package.json should have its prod dependencies as:
# "dependencies": {
#   "libB": "workspace:../libB" <- using pnpm workspace concept
# }
#
# Scenario #1
# libA does not change, but libB does, then both versions will
# be updated and both packages will be published.
#
# Scenario #2
# libA does change, and libB does not, then only libA version will
# be updated and only libA package will be published.
#

name: Bump and Publish

on:
  pull_request:
    types: [closed]
    branches:
      - main
      - development

jobs:
  release-bundlesize:
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      # secrets.GITHUB_TOKEN is used by default with "checkout",
      # but in this case we are explicitely using a personal
      # token with the same permissions (NODE_CLI).
      # This is because we want to use the "release-please" action
      # that updates and commit files. Other jobs should react to
      # these commits and run.
      # From GitHub docs: "When you use the repository's GITHUB_TOKEN
      # to perform tasks on behalf of the GitHub Actions app, events
      # triggered by the GITHUB_TOKEN will not create a new workflow
      # run. This prevents you from accidentally creating recursive
      # workflow runs.
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.NODE_CLI }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          corepack enable
          pnpm install
          npx lerna run build --ignore "@versini/example-*" --ignore @versini/documentation
          npx lerna run stats:release
      - name: Commit Release Stats
        uses: stefanzweifel/git-auto-commit-action@v5

  publish:
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event.pull_request.merged == true
    needs: release-bundlesize
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch all history for all branches and tags, required for Lerna (default is 1)
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: "https://registry.npmjs.org"

      - name: Version Bump
        continue-on-error: true
        id: graduateRelease
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          corepack enable
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          if [ ${{ github.base_ref }} = development ]; then
            npx lerna version --exact --conventional-commits --conventional-prerelease --preid beta --yes
          else
            npx lerna version --exact --conventional-commits --conventional-graduate --create-release github --yes
          fi

      - name: Version Bump Fallback
        if: ${{ always() && steps.graduateRelease.outcome == 'failure' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo Falling back to non-graduate release due to https://github.com/lerna/lerna/issues/2532
          git stash
          corepack enable
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

          if [ ${{ github.base_ref }} = development ]; then
            npx lerna version --exact --conventional-commits --conventional-prerelease --preid beta --yes
          else
            npx lerna version --exact --conventional-commits --create-release github --yes
          fi

      - name: Publish Packages
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}}
        run: |
          corepack enable
          npx lerna publish from-package --no-push --no-private --yes --loglevel debug
